{

	"101": {
		"id": 101,
		"title": "Go with the Flow: smooth architecture design with Coroutines Flow",
		"abstract": "Kotlin coroutines resuelve el problema de las tareas en segundo plano de una manera sencilla y conocida: usando suspend functions (async/await). Conozcamos Flow y como usarlo en nuestra arquitectura.",
		"description": "Una de las tareas más complejas en el desarrollo de software es la concurrencia. Kotlin coroutines resuelve este problema de una manera sencilla y conocida: usando suspend functions (async/await). Dentro de coroutines existe Flow. Flow permite tener streams en nuestra arquitectura desde las capas más abstractas, evitando así depender de feature de la plataforma.\r\n\r\nEn esta charla aprenderás como diseñar tu arquitectura de forma sólida y fluida usando Kotlin Flow.",
		"audience_level": "Intermediate",
		"time": "10:00 AM",
		"language": "es",
		"talk_format": "Talk (~30-45 minutes)",
		"tags": [
		 "JVM",
			"Kotlin",
			"Framework"
		],
		"speakers": [
			"euryperez"
		]
	},

	"102": {
		"id": 102,
		"title": "El alto costo de no actualizar Java en tu empresa.",
		"abstract": "Con los nuevos releases de Java sucediendo cada 6 meses y la tecnología avanzando tan rápido, es muy fácil quedarnos atrás y esto supone un costo, a veces muy alto que muchas veces ignoramos y cuando venimos a cuantificarlos es bastante alto para pagarlo.",
		"description": "Con los nuevos releases de Java sucediendo cada 6 meses y la tecnología avanzando tan rápido, es muy fácil quedarnos atrás y esto supone un costo, a veces muy alto que muchas veces ignoramos y cuando venimos a cuantificarlos es bastante alto para pagarlo.",
		"audience_level": "Intermediate",
		"time": "10:35 AM",
		"language": "es",
		"talk_format": "Talk (~30-45 minutes)",
		"tags": [
			"Java",
			"JVM"
		],
		"speakers": [
			"eugenio-duran"
		]
	},

	"103": {
		"id": 103,
		"title": "Demystifying the Java Flight Recorder API",
		"abstract": "Esta charla será útil para los desarrolladores que deseen monitorear el rendimiento de las aplicaciones, especialmente en caso de grandes cargas de datos. Ayudará a los desarrolladores a comprender cómo usar e integrar el API de JFR en sus proyectos existentes basados en Java sin problemas junto con las mejores prácticas.",
		"description": "Esta sesión tiene como objetivo principal proporcionar detalles sobre cómo usar el JFR API. También explica las razones para usar el JFR API en lugar del convencional Java Logging API al resaltar las diferencias clave entre ellas.",
	 "audience_level": "All",
	 	"time": "11:05:00 AM",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "en",
		"tags": [
			"Framework",
			"Java"
		],
		"speakers": [
			"karan-balkar"
		]
	}
	,
	"104": {
			"id": 104,
			"title": "Lucee Framework - \"The Unknown Java Legacy Framework\"",
			"time": "11:35:00 AM",
			"abstract": "I'm going to talk about an \"unknown java framework\" called LUCEE which is used to write down legacy business application with the \"rapid-development\" slogan in mind. What it is, why was develop, who use it, advantages, disadvantages, cost, learning curve, design patterns and so much more...",
			"description": "I'm going to talk about the \u003cb\u003eLUCEE FRAMEWORK\u003c/b\u003e and the most basic features.",
		 "audience_level": "All",
			"talk_format": "Talk (~30-45 minutes)",
			"language": "es",
			"tags": [
				"Transformation Case Studies"
			],
			"speakers": [
				"Framework",
				"Java"
			]
		},

	"105": {
		"id": 105,
		"title": "Serverless Death Star",
		"abstract": "La implementación más relevante de Serverless es la de Function-as-a-Service (FaaS), donde solamente hay que desplegar el código de las funciones y elegir qué eventos las activarán. Aunque parece un proceso sencillo, hay que tener en cuenta ciertos aspectos para evitar construir un sistema complejo.",
		"description": "Serverless significa que no hay aprovisionamiento por adelantado ni gestión de servidores, y una economía de pago por uso para crear aplicaciones. En los últimos años se ha convertido en una palabra de moda que atrae a desarrolladores, y los arquitectos de soluciones adoptan cada vez más las arquitecturas basadas en eventos para desacoplar las aplicaciones distribuidas. Al hacer uso de funciones como servicio (FaaS), los desarrolladores despliegan el código de las funciones y eligen qué eventos las activarán. Aunque parece un proceso sencillo, hay que tener en cuenta ciertos aspectos a la hora de desarrollar aplicaciones serverless.\r\n\r\nEsta charla mostrará cómo construir una arquitectura serverless (multi-nube) y los anti-patrones a evitar.",
	 "audience_level": "All",
	 	"time": "12:05:00 PM",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "es",
		"tags": [
			"cloud computing",
					 "serverless",
					 "architecture",
					 "java functions"
		],
		"speakers": [
			"manases-jesus"
		]
	},

	"106": {
		"id": 106,
		"title": "Event Streaming and Processing with Apache Pulsar",
		"abstract": "Apache Pulsar ha llevado los sistemas empresariales  basados en eventos de transmisión y mensajería a un nuevo nivel, unificando la transmisión, la cola, la mediación y la transformación de mensajes, todo en la misma plataforma. Está a punto de convertirse en la plataforma de acceso de facto para la transmisión de eventos en el mundo moderno nativo de la nube.",
		"description": "Cuando se trata de sistemas de mensajería controlados por eventos distribuidos, generalmente los vemos compatibles con uno de los dos tipos de semántica: streaming o colas, y rara vez encontramos una plataforma que admita ambos. En esta presentación, primero obtendremos una introducción y algunas aclaraciones sobre los sistemas controlados por eventos y los controlados por mensajes, los flujos de eventos y el procesamiento de flujos. Luego, analizaremos Apache Pulsar, que ofrece una capacidad única en arquitectura y aplicaciones modernas y nativas de la nube, en la que su plataforma es compatible con Pub-Sub y Message Queues, y se extiende al streams processing y realiza la mediación de mensajes. Veremos cómo se basa en Apache Bookkeeper para su almacenamiento duradero, escalable y eficaz de flujos de registros, y cómo aprovecha Apache Zookeeper. También veremos cómo Pulsar está destinado a brindar lo mejor de otros sistemas, por ejemplo, cómo llena los vacíos que tiene Kafka y amplía su capacidad de transmisión en el complejo mundo de la nube.",
	 "audience_level": "All",
	 	"time": "12:35:00 PM",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "es",
		"tags": [
						"Event Streaming",
             "Distributed Messaging",
             "Cloud Native",
             "Open Source",
             "Real time",
             "Pub/Sub"
		],
		"speakers": [
			"mary-grygleski"
		]
	},

  "107": {
		"id": 107,
		"title": "Community Panel",
		"abstract": "Javeras Tricolor: Debuggeando Estereotipos",
		"description": "Presencia del género femenino en el multiverso Java.",
	 "audience_level": "All",
	 	"time": "1:05 PM",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "es",
		"tags": [
			"Mujeres TICs",
			"Java"

		],
		"speakers": [
		  "cristal-guerrero",	"mareubi-garcia","mirna-de-jesus"
		]
	},
	"108": {
		"id": 108,
		"title": "Handle errors in your application without tears",
		"abstract": "Users don't always follow the happy path while using your application. They might enter the wrong values. The database or the API integration might go down. In this workshop, I'll show you how to deal with all 3 without ending up with a spaghetti code and, more importantly, without tears :).",
		"description": "Things don't always go as planned in our applications. We always need to validate user inputs and handle third-party integration errors. Yet, developers always struggle to find the right way to handle errors and exceptions in codes without ending up with a spaghetti code. Clear error management makes your code more predictable, maintainable, and easy to reason about.\r\n\r\nIn this workshop, you will learn how to create and categorize your error codes so they can serve as up-to-date documentation when you need to integrate with your own API. Additionally, I'll share techniques that can help you translate your error messages to other languages without tears, give users general messages, and log more detailed messages for debugging or audit purposes.\r\n\r\nJoin me to see how we can improve the user experience in our applications and learn how better error handling results in better code.",
	 "audience_level": "All",
	 	"time": "1:35 PM",
		"talk_format": "Talk (~30 minutes)",
		"language": "es",
		"tags": [
			"Kotlin",
					 "Java",
					 "TypeScript",
					 "Software Development",
					 "Software Architecture",
					 "Exception",
					 "Error Handling"
		],
		"speakers": [
			"clivens"
		]
	},
		"109": {
			"id": 109,
			"title": "Computer Vision con Jupyter, TensorFlow y Java",
			"abstract": "Jupyter y Python son 2 herramientas que usualmente van de la mano en el desarrollo de modelos de Machine Learning y AI de cualquier tipo, pero ¿qué tal si te digo de que esto es posible en Java? ¿Y mejor aún, usando Tensorflow ?  En esta charla, lo descubriremos.",
			"description": "En esta charla realizaremos un modelo sencillo de computer vision (o vision computacional) el cual se centrara en enseñar como utilizar las herramientas de Jupyter y Tensorflow (junto con otras librerías mas) en la plataforma Java, con el objetivo de mostrar a los desarrolladores Java que quieran entrar en el campo de la Inteligencia Artificial, Data Science o areas afines, de que es posible también hacer todo esto en Java sin necesidad de cambiar de lenguaje (a Python como es la norma en esta area). Mostraremos el proceso completo de creación y entrenamiento de un modelo en Tensorflow (el cual explicaremos como instalarlo en Java). Como los modelos de computer vision se basan en el Deep Learning, un subset de Machine Learning, también veremos de manera resumida conceptos básicos de Machine Learning y Deep Learning y sobre todo lo que son las Redes Neuronales Convolucionales (CNN en inglés).",
		 "audience_level": "All",
			"time": "2:05 PM",
			"talk_format": "Talk (~30 minutes)",
			"language": "es",
			"tags": [
				"deep learning",
             "java",
             "artificial intelligence",
             "jvm",
             "jupyter",
             "ijava",
             "data science"
			],
			"speakers": [
				"juan-polanco"
			]
	},
	"110": {
		"id": 110,
		"title": "Taller de Contenedores y Orquestadores de Software Para Javeros",
		"abstract": "Taller para desmitificar el uso de los contenedores y orquestadores de software en aplicaciones Java. Estaremos abordando los conceptos básicos y practicándolos.",
		"description": "Los contenedores y orquestadores de software son herramientas muy demandas al día de hoy por los beneficios en aislamiento, despliegue y homogeneidad en las fases de desarrollo que nos proporcionan, dicho conocimiento es muy demandado en conjunto con las herramientas que utilizamos para nuestro desarrollo y es importante dominar la creación, despliegue y actualización de nuestras aplicaciones utilizando contenedores de software. Al mismo tiempo, coordinar un grupo de contenedores puede ser una tarea compleja y los orquestadores de software nos ayudan en ese sentido.\r\n\r\nEn nuestro taller estaremos trabajando específicamente con la tecnología Docker para implementar los conceptos de contenedores y Kubernetes como plataforma para orquestar nuestros contenedores.",
	 "audience_level": "All",
		"time": "9:00 A.M / 22 Julio 2022",
		"talk_format": "Workshop (\u003e 60 minutes)",
		"language": "es",
		"tags": [
					 "Contenedores",
            "Docker",
            "Kubernetes",
            "Orquestadores",
            "Java"
		],
		"speakers": [
			"ccamachog"
		]
},
"111": {
	"id": 111,
	"title": "Novedades después de Java 8 que hacen tu vida más fácil",
	"abstract": "En este taller vamos a trabajar con las novedades después de Java SE 8, los beneficios que ofrecen y qué cosas emocionantes están por venir. Así como también, abordaremos tus inquietudes sobre los retos que supone el nuevo ciclo de lanzamiento.",
	"description": "En su nuevo modelo de lanzamiento, cada seis meses liberan una nueva versión de Java. Los lanzamientos que se demoraban varios años son cosas del pasado, Java ha adoptado el espíritu de agilidad para hacer frente a la era de la nueva tecnología. Algunos se preguntan, ¿Qué impacto tendrá este lanzamiento frecuente en Java, su calidad, adopción y desarrollo futuro? Qué intensivos tienen los desarrolladores y las organizaciones para seguir el ritmo de Java. ¿Deberían mantenerse al día o ponerse al día una vez en unos pocos años? Todas son buenas preguntas y preocupaciones razonables.\r\n\r\nA partir de Java SE 8 han sucedido muchos cambios, las actualizaciones a los APIs y las nuevas funcionalidades del lenguaje son realmente geniales y muy útiles en tu trabajo del día a día.\r\n\r\nEn este taller vamos a trabajar con las novedades después de Java SE 8, los beneficios que ofrecen y qué cosas emocionantes están por venir. Así como también, abordaremos tus inquietudes sobre los retos que supone el nuevo ciclo de lanzamiento.",
 "audience_level": "Intermediate",
	"time": "2:00 P.M / 22 Julio 2022",
	"talk_format": "Workshop (\u003e 60 minutes)",
	"language": "es",
	"tags": [
		"java",
			"jvm",
			"jdk"
	],
	"speakers": [
		"ecabrerar"
	]
}
}
