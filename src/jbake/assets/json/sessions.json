{


	"101": {
		"id": 101,
		"title": "Introducción a la máquina virtual políglota GraalVM",
		"abstract": "Esta charla presentará cinco casos de uso para la máquina virtual políglota, GraalVM, que pueden beneficiar a su organización hoy. Desde acelerar sus aplicaciones hasta usar múltiples lenguajes de programación en el mismo proyecto, lenguajes nativos sobre la JVM y más.",
		"description": "Esta charla presentará cinco casos de uso para la máquina virtual políglota, GraalVM, que pueden beneficiar a su organización hoy. Desde acelerar sus aplicaciones hasta usar múltiples lenguajes de programación en el mismo proyecto, lenguajes nativos sobre la JVM y más.",
		"audience_level": "Intermediate",
		"time": "TBD",
		"language": "es",
		"talk_format": "Workshop (\u003e 60 minutes)",
		"tags": [
			"Java",
			"JVM"
		],
		"speakers": [
			"psanders"
		]
	},

	"102": {
		"id": 102,
		"title": "Clean Threading with Kotlin Coroutines",
		"abstract": "Async and Threading are words that very often scare the developers. In Android, traditionally we have managed some of those tasks with the now deprecated AsyncTask, but that callback oriented way has some limitations.\n\nLet's learn how we can refactor our legacy background operations using callbacks for a graceful and very optimized way using Kotlin Coroutines.\n\nYou will get started with Kotlin coroutines, learn how to perform multiple operations in parallel or performing sequential operations.",
		"description": "Async and Threading are words that very often scare the developers. In Android, traditionally we have managed some of those tasks with the now deprecated AsyncTask, but that callback oriented way has some limitations.\n\nLet's learn how we can refactor our legacy background operations using callbacks for a graceful and very optimized way using Kotlin Coroutines.\n\nYou will get started with Kotlin coroutines, learn how to perform multiple operations in parallel or performing sequential operations.",
		"audience_level": "Intermediate",
		"time": "TBD",
		"language": "es",
		"talk_format": "Workshop (\u003e 60 minutes)",
		"tags": [
		 "JVM",
			"Kotlin",
			"Framework"
		],
		"speakers": [
			"euryperez"
		]
	},

	"103": {
		"id": 103,
		"title": "Mutiny la programación reactiva más sofisticada en Quarkus",
		"abstract": "En ésta sesión trateremos el tema de programación reactiva utilizando la librería Mutiny.Habrá código en vivo!",
		"description": "¿Qué es programación reactiva? Cuando buscamos en Wikipedia, tu podrías encontrar la siguiente definición:\n\nReactive programming combines functional programming, the observer pattern, and the iterable programming\n\nEn español\n\nLa programación reactiva combina con la programación funcional, el patrón del observador y la programación iterable.\n\nEs correcta pero no encontramos una definición más útil pero hagamos una definición más sencilla.\n\nReactive programming is about programming with data streams.\n\nEn español\n\nLa programación reactiva se trata de programar con flujos de datos.\n\nMutiny es una nueva librería de programación reactiva.\n\nProporciona un modelo de desarrollo asincrónico simple pero potente que le permite crear aplicaciones reactivas.\n\n¿Fácil de implementar?\n\nEl API no requiere mucho conocimiento avanzado. Esto debería ayudar a diseñar su lógica.\n\nHabrá código en vivo!",
	 "audience_level": "All",
	 	"time": "TBD",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "es",
		"tags": [
			"Framework",
			"Java"
		],
		"speakers": [
			"juandiegolopezve"
		]
	}
	,
	"104": {
			"id": 104,
			"title": "Our journey to adopt Kubernetes to create an App like Tinder from start to finish",
			"time": "TBD",
			"abstract": "How many questions cross your mind at the time of starting a complex platform-adaptive app like Tinder? Probably many, especially in terms of technology and infrastructure.\n\nIn this talk, we'll discuss our approaches to overcome challenges that could prevent us from reaching our goals to create a viable solution for our users. We'll focus on open source tools that help us achieve the following objectives:\n\n- Have a single source of truth for our environments to support our contingency plan.\n- Reduce developer onboarding overhead and increase productivity.\n
- Leverage existing technologies to reduce time to market.\n- Increase value for our users by improving service reliability.\n- Support business objectives with metrics, analytics, and platform observability.\nI invite you to join my talk to help you streamline your process of creating complex enterprise applications.",
			"description": "How many questions cross your mind at the time of starting a complex platform-adaptive app like Tinder? Probably many, especially in terms of technology and infrastructure.\n\nIn this talk, we'll discuss our approaches to overcome challenges that could prevent us from reaching our goals to create a viable solution for our users. We'll focus on open source tools that help us achieve the following objectives:\n\n- Have a single source of truth for our environments to support our contingency plan.\n- Reduce developer onboarding overhead and increase productivity.\n- Leverage existing technologies to reduce time to market.\n- Increase value for our users by improving service reliability.\n- Support business objectives with metrics, analytics, and platform observability.\nI invite you to join my talk to help you streamline your process of creating complex enterprise applications.",
		 "audience_level": "All",
			"talk_format": "Talk (~30-45 minutes)",
			"language": "es",
			"tags": [
				"Transformation Case Studies",
			],
			"speakers": [
				"clivens"
			]
		},

	"105": {
		"id": 105,
		"title": "Implementando servicios gRPC en Java",
		"abstract": "Con la proliferación de sistemas que implementan la arquitectura de microservicios y los problemas asociados en el intercambios de mensajes bajo REST, surge un nuevo sistema que ayuda en gran medida en el rendimiento del intercambio de los mensajes para sistemas    multiplataformas e independiente del lenguaje de implementación, esa tecnología se llama gRPC (general-purpose Remote Procedure Call ) y estaremos viendo su implementación baja la plataforma Java e integrando en otros lenguajes.",
		"description": "Con la proliferación de sistemas que implementan la arquitectura de microservicios y los problemas asociados en el intercambios de mensajes bajo REST, surge un nuevo sistema que ayuda en gran medida en el rendimiento del intercambio de los mensajes para sistemas    multiplataformas e independiente del lenguaje de implementación, esa tecnología se llama gRPC (general-purpose Remote Procedure Call ) y estaremos viendo su implementación baja la plataforma Java e integrando en otros  lenguajes.",
	 "audience_level": "All",
	 	"time": "TBD",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "es",
		"tags": [
			"Framework",
			"Java"
		],
		"speakers": [
			"ccamachog"
		]
	},

	"106": {
		"id": 106,
		"title": "Creando un Web API desde la idea hasta el despliegue de forma ágil",
		"abstract": "El manejo y administración de API se están generalizando, actualmente es más fácil exponer las APIs de forma segura al mundo. Sin embargo, el ciclo de desarrollo de API tiene algunos casos pendientes que resolver. Todo el ciclo de vida de la API también debería ser ágil para seguir siendo relevante. Por lo tanto, es hora de pensar en una nueva forma de entregar API (simulacros y pruebas incluidas) para simplificar y acelerar el envío de API listas para producción. \n\nEn esta sesión vamos a crear un Web API abarcando diferentes fases del desarrollo de API (Diseño, Simulacro (mock) y pruebas) hasta llegar a producción.",
		"description": "El manejo y administración de API se están generalizando, actualmente es más fácil exponer las APIs de forma segura al mundo. Sin embargo, el ciclo de desarrollo de API tiene algunos casos pendientes que resolver. Todo el ciclo de vida de la API también debería ser ágil para seguir siendo relevante. Por lo tanto, es hora de pensar en una nueva forma de entregar API (simulacros y pruebas incluidas) para simplificar y acelerar el envío de API listas para producción. \n\nEn esta sesión vamos a crear un Web API abarcando diferentes fases del desarrollo de API (Diseño, Simulacro (mock) y pruebas) hasta llegar a producción.",
	 "audience_level": "All",
	 	"time": "TBD",
		"talk_format": "Talk (~30-45 minutes)",
		"language": "es",
		"tags": [
			"API",
			"Java",
			"Testing"
		],
		"speakers": [
			"ecabrerar"
		]
	}

}
